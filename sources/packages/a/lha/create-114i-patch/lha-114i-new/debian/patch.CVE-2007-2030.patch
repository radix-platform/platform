diff -Naur lha-1.14i.orig/src/lhadd.c lha-1.14i/src/lhadd.c
--- lha-1.14i.orig/src/lhadd.c	2000-10-04 16:57:38.000000000 +0200
+++ lha-1.14i/src/lhadd.c	2007-12-01 16:29:29.000000000 +0100
@@ -35,6 +35,8 @@
 	if ((hdr->unix_mode & UNIX_FILE_SYMLINK) == UNIX_FILE_SYMLINK) {
 		char            buf[256], *b1, *b2;
 		if (!quiet) {
+			/* make sure we use a zero-terminated buffer */
+			hdr->name[255] = 0;
 			strcpy(buf, hdr->name);
 			b1 = strtok(buf, "|");
 			b2 = strtok(NULL, "|");
@@ -108,7 +110,7 @@
 		if (symlink)
 			fp = NULL;
 		else
-			fp = xfopen(name, READ_BINARY);
+			fp = xfopen(name, READ_BINARY, 0);
 	else {
 		fp = NULL;
 	}
@@ -211,8 +213,11 @@
 				add_sp(&sp, hdr.name, strlen(hdr.name) + 1);
 		}
 		else if ((hdr.unix_mode & UNIX_FILE_TYPEMASK) == UNIX_FILE_DIRECTORY) {
+			/* make sure we use a zero-terminated buffer */
+			hdr.name[sizeof(hdr.name)-1] = 0;
 			strcpy(name, hdr.name);
 			len = strlen(name);
+			/* XXX thomas: what about multiple '/' or about ".." */
 			if (len > 0 && name[len - 1] == '/')
 				name[--len] = '\0';	/* strip tail '/' */
 			if (stat(name, &stbuf) >= 0)	/* exist ? */
@@ -237,17 +242,21 @@
 
 	old_header_pos = ftell(oafp);
 	while (get_header(oafp, &ahdr)) {
+		/* make sure we use a zero-terminated buffer */
+		ahdr.name[sizeof(ahdr.name)-1] = 0;
 		strcpy(lpath, ahdr.name);
 		b1 = strtok(lpath, "|");
 		b2 = strtok(NULL, "|");
 		if (need_file(b1)) {	/* skip */
 			fseek(oafp, ahdr.packed_size, SEEK_CUR);
 			if (noexec || !quiet)
+			{
 				if (b2 != NULL)
 					printf("delete %s -> %s\n", b1, b2);
 				else
 					printf("delete %s\n", b1);
 		}
+		}
 		else {		/* copy */
 			if (noexec) {
 				fseek(oafp, ahdr.packed_size, SEEK_CUR);
@@ -276,7 +285,7 @@
 	signal(SIGHUP, interrupt);
 
 	old_umask = umask(077);
-	afp = xfopen(temporary_name, WRITE_BINARY);
+	afp = xfopen(temporary_name, "!" WRITE_BINARY, 1);
 	remove_temporary_at_error = TRUE;
 	temporary_fp = afp;
 	umask(old_umask);
@@ -319,13 +328,13 @@
 {
 	FILE           *oafp, *nafp;
 
-	oafp = xfopen(temporary_name, READ_BINARY);
+	oafp = xfopen(temporary_name, READ_BINARY, 1);
 	if (!strcmp(new_archive_name, "-")) {
 		nafp = stdout;
 		writting_filename = "starndard output";
 	}
 	else {
-		nafp = xfopen(new_archive_name, WRITE_BINARY);
+		nafp = xfopen(new_archive_name, WRITE_BINARY, 0);
 		writting_filename = archive_name;
 	}
 	reading_filename = temporary_name;
diff -Naur lha-1.14i.orig/src/lharc.c lha-1.14i/src/lharc.c
--- lha-1.14i.orig/src/lharc.c	2007-12-01 16:17:19.000000000 +0100
+++ lha-1.14i/src/lharc.c	2007-12-01 16:36:24.000000000 +0100
@@ -1016,13 +1016,26 @@
 }
 
 FILE           *
-xfopen(name, mode)
+xfopen(name, mode, safe)
 	char           *name, *mode;
+	int            safe;
 {
-	FILE           *fp;
+	FILE           *fp = NULL;
+
+	if (mode[0] == '!') {
+		int	fd;
 
+		int mask = O_RDWR|O_CREAT;
+		if(safe == 0)
+			mask |= O_EXCL;
+
+		fd = open(name, mask, 0600);
+		if (fd < 0 || (fp = fdopen(fd, mode + 1)) == NULL)
+			fatal_error(name);
+	} else {
 	if ((fp = fopen(name, mode)) == NULL)
 		fatal_error(name);
+	}
 
 	return fp;
 }
diff -Naur lha-1.14i.orig/src/lhext.c lha-1.14i/src/lhext.c
--- lha-1.14i.orig/src/lhext.c	2007-12-01 16:17:19.000000000 +0100
+++ lha-1.14i/src/lhext.c	2007-12-01 16:17:39.000000000 +0100
@@ -360,7 +360,6 @@
 				}
 
 				unlink(bb1);
-				make_parent_path(bb1);
 				l_code = symlink(bb2, bb1);
 				if (l_code < 0) {
 					if (quiet != TRUE)
